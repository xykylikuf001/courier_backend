"""6_order

Revision ID: 3d0bf138b5df
Revises: b91096c2229f
Create Date: 2024-11-21 23:22:18.575814

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from app.contrib.order import ShippingTypeChoices, OrderStatusChoices

# revision identifiers, used by Alembic.
revision = '3d0bf138b5df'
down_revision = 'b91096c2229f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'order',
        sa.Column('code', sa.String(length=255), nullable=True),
        sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(
            choices=OrderStatusChoices, impl=sa.String(50)
        ), nullable=False, default=OrderStatusChoices.pending),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('sender_name', sa.String(length=255), nullable=False),
        sa.Column('sender_phone', sa.String(length=255), nullable=False),
        sa.Column('billing_address', sa.Text(), nullable=False),
        sa.Column('shipping_address', sa.Text(), nullable=False),
        sa.Column('receiver_name', sa.String(length=255), nullable=False),
        sa.Column('receiver_phone', sa.String(length=255), nullable=False),
        sa.Column('weight', sa.String(length=255), nullable=True),
        sa.Column('price', sa.DECIMAL(precision=12, scale=2), nullable=True),
        sa.Column('shipping_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
        sa.Column('shipping_type', sqlalchemy_utils.types.choice.ChoiceType(
            choices=ShippingTypeChoices, impl=sa.String(length=20)
        ), nullable=False),
        sa.Column('note', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('private_metadata', sa.JSON(), nullable=False),
        sa.Column('public_metadata', sa.JSON(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fx_order_user_id', ondelete='RESTRICT'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_id'), 'order', ['id'], unique=True)
    op.create_table(
        'invoice',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('order_id', sa.UUID(), nullable=False),
        sa.Column('billing_address', sa.Text(), nullable=False),
        sa.Column('shipping_address', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('private_metadata', sa.JSON(), nullable=False),
        sa.Column('public_metadata', sa.JSON(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(['order_id'], ['order.id'], name='fx_invoice_order_id', ondelete='RESTRICT'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fx_invoice_user_id', ondelete='RESTRICT'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'order_note',
        sa.Column('body', sa.Text(), nullable=False),
        sa.Column('order_id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(['order_id'], ['order.id'], name='fx_order_note_order_id',
                                ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fx_order_note_user_id', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_note')
    op.drop_table('invoice')
    op.drop_index(op.f('ix_order_id'), table_name='order')
    op.drop_table('order')
    # ### end Alembic commands ###
